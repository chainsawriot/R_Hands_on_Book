{
  "hash": "721cace3204593c1b5039eebb99fbe4b",
  "result": {
    "markdown": "---\ntitle: \"Tabellen und Grafiken in R\"\nauthor: \"Cornelius Puschmann\"\ntoc: true\nnumber-sections: true\nhighlight-style: pygments\nformat:\n  html:\n    code-fold: false\n    code-line-numbers: true\n---\n\n\n![Eine Wand voller Tabellen, Bild generiert von Midjourney](Bilder/zemkipatrick_comic_style_cyberpunk_statistics_table_wideformat_a16032f7-613e-4608-b19e-95c97039c779.png)\n\n# Eine Einführung in ggplot2\n\nDieses Notebook illustriert verschiedene Möglichkeiten dafür, wie auf Grundlage der ALLBUS-Daten informative Tabellen und Plots erstellt werden können. Tabellen und Datenvisualisierungen (\"Plots\") stellen zwei sehr effektive Möglichkeiten dar, sich schnell einen Überblick über komplexe Daten zu verschaffen. Dabei lassen sich oftmals Zusammenhänge zwischen zwei oder mehr Variablen erahnen, die dann später inferenzstatistisch auf die Solidität ihres Zusammenhangs hin überprpüft werden können.\n\nZunächst laden wir die die Pakete des tidyverse. Die Einstellung theme_set hat einen Einfluss auf die Grafiken, die wir später erstellen werden.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Paket 'tidyverse' wurde unter R Version 4.3.1 erstellt\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Paket 'tidyr' wurde unter R Version 4.3.1 erstellt\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(naniar)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Paket 'naniar' wurde unter R Version 4.3.1 erstellt\n```\n:::\n\n```{.r .cell-code}\nlibrary(haven)\ntheme_set(theme_minimal())\n```\n:::\n\n\nJetzt laden wir den ALLBUS-Datensatz mittels der Stata-Importfunktion read_dta.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndaten <- read_dta(\"Datensatz/Allbus_2021.dta\")\n```\n:::\n\n\nNun laden wir zudem noch drei kleinere Zufallssamples aus dem Gesamtdatensatz. Diese bestehen aus einer kleineren Anzahl relevanter Variablen und sind daher etwas übersichtlicher als der Hauptdatensatz.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_klein <- read_rds(\"Datensatz/ALLBUS_sample_klein.rds\")\nsample_mittel <- read_rds(\"Datensatz/ALLBUS_sample_mittel.rds\")\nsample_gross <- read_rds(\"Datensatz/ALLBUS_sample_gross.rds\")\n```\n:::\n\n\nWie sehen die Daten aus?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_klein\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 4\n   alter geschlecht bildung            fernsehkonsum\n   <dbl> <fct>      <fct>                      <dbl>\n 1    37 MANN       FACHHOCHSCHULREIFE             3\n 2    38 MANN       MITTLERE REIFE                 7\n 3    47 FRAU       VOLKS-,HAUPTSCHULE             6\n 4    66 MANN       HOCHSCHULREIFE                 2\n 5    47 FRAU       HOCHSCHULREIFE                 7\n 6    75 MANN       VOLKS-,HAUPTSCHULE             7\n 7    41 FRAU       MITTLERE REIFE                 4\n 8    18 MANN       NOCH SCHUELER                  7\n 9    91 MANN       <NA>                          NA\n10    56 MANN       HOCHSCHULREIFE                 4\n11    58 MANN       HOCHSCHULREIFE                 7\n12    32 MANN       MITTLERE REIFE                 2\n13    47 MANN       FACHHOCHSCHULREIFE             1\n14    49 MANN       MITTLERE REIFE                 1\n15    23 MANN       MITTLERE REIFE                 0\n16    48 FRAU       MITTLERE REIFE                 0\n17    49 MANN       HOCHSCHULREIFE                 0\n18    36 MANN       FACHHOCHSCHULREIFE             7\n19    70 MANN       HOCHSCHULREIFE                 7\n20    43 FRAU       MITTLERE REIFE                 7\n```\n:::\n:::\n\n\n# Tabellen\n\nTabellen (und besonder sog. Kontingenz- oder Häufigkeitstabellen) sind ein einfaches und praktisches Mittel, um sich einen Überblick über Daten zu verschaffen.\n\n## Einfache Häufigkeitstabelle\n\nWir berechnen eine einfache Häufigkeitstabelle für die Variable 'edubde1' (höchster Bildungsabschluss).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeschlechterverteilung <- sample_klein %>% \n  group_by(geschlecht) %>% \n  summarise(anzahl = n())\ngeschlechterverteilung\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  geschlecht anzahl\n  <fct>       <int>\n1 MANN           15\n2 FRAU            5\n```\n:::\n:::\n\n\nIm nächsten Schritt fügen wir relative Anteile hinzu, um Verhältnisse besser zu verstehen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeschlechterverteilung <- sample_klein %>% \n  group_by(geschlecht) %>% \n  summarise(anzahl = n()) %>% \n  mutate(anteil = anzahl/sum(anzahl))\ngeschlechterverteilung\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  geschlecht anzahl anteil\n  <fct>       <int>  <dbl>\n1 MANN           15   0.75\n2 FRAU            5   0.25\n```\n:::\n:::\n\n\nNun fügen wir noch Prozentanteile ein, indem with mit 100 multiplizieren und runden (was in erster Linie kosmetischer Natur ist).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeschlechterverteilung <- sample_klein %>% \n  group_by(geschlecht) %>% \n  summarise(anzahl = n()) %>% \n  mutate(anteil = anzahl/sum(anzahl),\n         prozent = round(anteil * 100))\ngeschlechterverteilung\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  geschlecht anzahl anteil prozent\n  <fct>       <int>  <dbl>   <dbl>\n1 MANN           15   0.75      75\n2 FRAU            5   0.25      25\n```\n:::\n:::\n\n\n## Tabellen speichern\n\nJetzt schreiben wir die Daten in eine CSV-Datei, die wir bspw. später mit Excel oder einer anderen Tabellenkalkulation öffnen können.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_excel_csv2(geschlechterverteilung, file = \"geschlechterverteilung.csv\")\n```\n:::\n\n\n## Kreuztabellen\n\nWas, wenn wir zwei Variablen mit Blick auf ihre Werte in Beziehung setzen wollen? Das bezeichnet man als Kreuz- oder Kontigenztabelle.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbildung_und_geschlecht <- sample_klein %>% \n  group_by(bildung, geschlecht) %>% \n  summarise(anzahl = n()) %>% \n  mutate(anteil = anzahl/sum(anzahl),\n         prozent = round(anteil * 100))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'bildung'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nbildung_und_geschlecht\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 5\n# Groups:   bildung [6]\n  bildung            geschlecht anzahl anteil prozent\n  <fct>              <fct>       <int>  <dbl>   <dbl>\n1 VOLKS-,HAUPTSCHULE MANN            1  0.5        50\n2 VOLKS-,HAUPTSCHULE FRAU            1  0.5        50\n3 MITTLERE REIFE     MANN            4  0.571      57\n4 MITTLERE REIFE     FRAU            3  0.429      43\n5 FACHHOCHSCHULREIFE MANN            3  1         100\n6 HOCHSCHULREIFE     MANN            5  0.833      83\n7 HOCHSCHULREIFE     FRAU            1  0.167      17\n8 NOCH SCHUELER      MANN            1  1         100\n9 <NA>               MANN            1  1         100\n```\n:::\n:::\n\n\nMöglicherweise möchte ich den Anteil anders berechnen und nicht die relative Geschlechterverteilung *innerhalb* eines Bildungsabschlusses in den Blick nehmen, sondern etwa die Verteilung der Bildungsabschlüsse jeweils für männliche und weibliche Studienteilnehmer anschauen. Dies lässt sich mit einer Neugruppierung der Daten durch group_by() erreichen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeschlecht_und_bildung <- sample_klein %>% \n  group_by(geschlecht, bildung) %>% \n  summarise(anzahl = n()) %>% \n  mutate(anteil = anzahl/sum(anzahl),\n         prozent = round(anteil * 100))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'geschlecht'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ngeschlecht_und_bildung\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 5\n# Groups:   geschlecht [2]\n  geschlecht bildung            anzahl anteil prozent\n  <fct>      <fct>               <int>  <dbl>   <dbl>\n1 MANN       VOLKS-,HAUPTSCHULE      1 0.0667       7\n2 MANN       MITTLERE REIFE          4 0.267       27\n3 MANN       FACHHOCHSCHULREIFE      3 0.2         20\n4 MANN       HOCHSCHULREIFE          5 0.333       33\n5 MANN       NOCH SCHUELER           1 0.0667       7\n6 MANN       <NA>                    1 0.0667       7\n7 FRAU       VOLKS-,HAUPTSCHULE      1 0.2         20\n8 FRAU       MITTLERE REIFE          3 0.6         60\n9 FRAU       HOCHSCHULREIFE          1 0.2         20\n```\n:::\n:::\n\n\n# Visualisierung\n\nBeim Erstellen von Grafiken (Plots) mit R kommt eines der populärsten tidyverse-Pakete zum Einsatz: [ggplot2](https://ggplot2.tidyverse.org/). Damit lassen sich sehr vielfältige Grafiken erstellen.\n\n## Balkendiagramme\n\nDas einfachste Diagramm, das man mit dem ggplot2-Paket erstellen kann, ist ein Balkendiagramm (barplot). Das nachstehende Beispiel zeigt die Häufigkeitsverteilung der Variable gndr (gender = Geschlecht) im Datensatz.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sample_klein, aes(geschlecht)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Ein erstes Plot-1.png){width=672}\n:::\n:::\n\n\nIn einem nächsten Schritt fügen wir eine Überschrift hinzu und formatieren die Balken und Achsen so, dass das Plot lesbarer ist.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sample_klein, aes(bildung)) + \n  geom_bar() + \n  ggtitle(\"Verteilung der Bildungsabschlüsse der Befragten\") + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) + \n  xlab(\"\") + ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Beschriftungen hinzufügen-1.png){width=672}\n:::\n:::\n\n\nFarben lassen sich in ggplot vielseitig einsetzen, um Kategorienunterschiede anzuzeigen. Dies geschieht mit den Argumenten 'fill' bzw. 'color'.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sample_klein, aes(bildung, fill = bildung)) + \n  geom_bar() +\n  ggtitle(\"Verteilung der Bildungsabschlüsse der Befragten\") + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) + \n  xlab(\"\") + ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Barplot mit Farbpalette-1.png){width=672}\n:::\n:::\n\n\nEs existieren zahlreiche Farbpaletten für ggplot, um unterschiedliche Arten von Beziehungen darzustellen. Das nachstehende Palette unterscheidet verschiedenen Kategorien. Für gradierte Variablen ('viel' - 'wenig') sind andere Paletten z.T. besser geeignet. Eine gute Auswahl an Palette enthält u.a. das Paket [RColorBrewer](https://r-graph-gallery.com/38-rcolorbrewers-palettes.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sample_klein, aes(bildung, fill = bildung)) + \n  geom_bar() + coord_flip() + \n  scale_fill_brewer(palette = \"Set1\") +  \n  ggtitle(\"Verteilung der Bildungsabschlüsse der Befragten\") + \n  xlab(\"\") + ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Barplot mit gradierter Farbpalette-1.png){width=672}\n:::\n:::\n\n\nSchließlich lassen sich auch die Beschriftung und weitere Aspekte eines Plots anpassen (Achsenorientierung, Legende etc).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sample_klein, aes(as_factor(fernsehkonsum))) + \n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) + \n  ggtitle(\"Fernsehkonsum pro Woche in Tagen\") + \n  xlab(\"Fernsehkonsum pro Woche in Tagen\") + ylab(\"Anzahl der Respondenten\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Barplot mit weiteren Anpassungen und Beschriftung-1.png){width=672}\n:::\n:::\n\n\n## Histogramme\n\nFür ein besseres Verständnis einer Verteilung sind oftmals die Häufigkeitsausprägungen einer kontinuierlichen Variable in gleich großen Gruppen interessant (sog. \"bins\"). Dabei hilft der Visualisierungstyp Histogramm.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sample_mittel, aes(alter)) + \n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Ein einfaches Histogramm-1.png){width=672}\n:::\n:::\n\n\nAuch hier lassen sich relevante Aspekte anpassen, etwa die Anzahl und Breite der Balken.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sample_mittel, aes(alter)) + \n  geom_histogram(bins = 40) + \n  ggtitle(\"Altersverteilung der Respondenten\") + \n  xlab(\"Alter\") + ylab(\"Anzahl der Respondenten\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Histogramm mit angepassten Bins-1.png){width=672}\n:::\n:::\n\n\nHier können wir erstmalig die Farbe eines Elements gezielt einsetzen, um eine zusätzliche (also nach Vetrauen auf der x-Achse und der Anzahl der Respondenten auf der y-Achse eine dritte Variable) darzustellen, nämlich das Geschlecht der Respondenten.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sample_gross, aes(vertrauen_polizei, fill = geschlecht)) + \n  geom_histogram(binwidth = 1, position = \"dodge\") + \n  ggtitle(\"Vertrauen in die Polizei nach Geschlecht\") + \n  xlab(\"Vetrauen (1-7)\") + ylab(\"Anzahl der Respondenten\") + labs(fill = \"Geschlecht\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 177 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Histogramm mit Gruppierung und Farbe nach Geschlecht-1.png){width=672}\n:::\n:::\n\n\nNeben Balken beherrscht ggplot auch zahlreiche weitere Darstellungsformen (sog. geoms). Eine interessante Alternative zum klassischen Histogramm ist etwa das Dichte-Plot (density plot). Nachstehend verwenden wir zwei Flächen und einen Trasparenz-Effekt für die Darstellung.\n\n## Dichte-Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\npolizei <- sample_gross %>% select(vertrauen_polizei, geschlecht) %>% filter(!is.na(geschlecht))\nggplot(polizei, aes(vertrauen_polizei, fill = geschlecht)) + \n  geom_density(alpha = 0.5) + \n  ggtitle(\"Vertrauen in die Polizei nach Geschlecht\") + \n  xlab(\"Vetrauen (1-7)\") + ylab(\"Anteil der Respondenten\") + labs(fill = \"Geschlecht\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 177 rows containing non-finite values (`stat_density()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Groups with fewer than two data points have been dropped.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in max(ids, na.rm = TRUE): kein nicht-fehlendes Argument für max; gebe\n-Inf zurück\n```\n:::\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Dichte-Diagramm-1.png){width=672}\n:::\n:::\n\n\n## Liniendiagramme\n\nZu den klassischen Plot-Typen gehören neben Barplots und Histogrammen auch Linien-, Punkt- und Streudiagramme, sowie Boxplots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvertrauen_nach_partei <- sample_gross %>% \n  rename(Partei = wahlabsicht_partei) %>% \n  group_by(Partei) %>% \n  summarise(Vertrauenswürdigkeit = mean(vertrauen_zeitungswesen, na.rm = T))\n\nggplot(vertrauen_nach_partei, aes(Partei, Vertrauenswürdigkeit, group = 1)) + \n  geom_line() + geom_point(size = 3) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +\n  ggtitle(\"Vertrauen in die Presse nach Partei\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Ein Liniendiagramm-1.png){width=672}\n:::\n:::\n\n\nEs lassen sich auch problemlos mehrere Geoms kominieren (hier: Linie und Punkte). Im folgenden Beispiel lässt sich durch eine absteigende Sortierung der Ergebnisse ein klareres Resultat erzielen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvertrauen_nach_partei_sortiert <- vertrauen_nach_partei %>% \n  arrange(desc(Vertrauenswürdigkeit)) %>% \n  mutate(Rang = row_number())\n\nggplot(vertrauen_nach_partei_sortiert, aes(reorder(Partei, Rang), Vertrauenswürdigkeit, group = 1)) + \n  geom_line() + geom_point(size = 3) + \n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1)) +\n  ggtitle(\"Verrauen in die Presse nach Partei\") + xlab(\"\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Linien- und Punktediagramm sortiert-1.png){width=672}\n:::\n:::\n\n\n## Streudiagramme\n\nEine weiterer Diagrammtyp, der häufig zum Einsatz kommt, ist das Streudiagramm (scatter plot). Mit diesem Plottypen lassen sich die Beziehung mehrerer Variablen (i.d.R. zwei, jeweils auf der x/y-Achse) darstellen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\neinkommen <- daten %>% \n  select(age, sex, educ, di01a) %>% \n  rename(alter = age,\n         geschlecht = sex,\n         bildung = educ,\n         einkommen = di01a) %>% \n  replace_with_na_all(condition = ~.x < 0) %>% \n  mutate(geschlecht = as_factor(geschlecht),\n         bildung = as_factor(bildung)) %>% \n  drop_na() %>% \n  slice_sample(n = 80)\neinkommen\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 80 × 4\n   alter     geschlecht bildung            einkommen\n   <dbl+lbl> <fct>      <fct>              <dbl+lbl>\n 1 42        MANN       MITTLERE REIFE      946     \n 2 72        MANN       VOLKS-,HAUPTSCHULE 1800     \n 3 33        MANN       HOCHSCHULREIFE     2500     \n 4 40        MANN       HOCHSCHULREIFE     5111     \n 5 32        FRAU       HOCHSCHULREIFE     1100     \n 6 59        MANN       MITTLERE REIFE     2700     \n 7 36        MANN       HOCHSCHULREIFE     7000     \n 8 71        MANN       VOLKS-,HAUPTSCHULE 1120     \n 9 48        FRAU       HOCHSCHULREIFE     1700     \n10 40        MANN       FACHHOCHSCHULREIFE 2000     \n# ℹ 70 more rows\n```\n:::\n:::\n\n\nWelche Beziehung lässt sich zwischen Alter (x-Achse) und täglicher Internetnutzung in Minuten (y-Achse) feststellen?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(einkommen, aes(alter, einkommen)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Ein einfaches Streudiagramm-1.png){width=672}\n:::\n:::\n\n\nWir wenden uns jetzt einem etwas ausgefeilteren Beispiel zu, nämlich der Beziehung von politischen Interesse und Nachrichtennutzung.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(einkommen, aes(alter, einkommen)) +\n  geom_jitter(width = .5, size = 2) +\n  geom_smooth(method = 'lm', formula = 'y ~ x') + \n  ggtitle(\"Zusammenhang zwischen Alter und Nettoeinkommen\") + \n  xlab(\"Alter\") + ylab(\"Nettoeinkommen in Euro\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Ein weiteres Beispiel für ein Streudiagramm-1.png){width=672}\n:::\n:::\n\n\nBei der Linie, die wir mit geom_smooth gezeichnet haben, handelt es sich um eine [Regressionsgerade](https://de.wikipedia.org/wiki/Lineare_Einfachregression). Der graue Bereich um die Gerade zeigt den lokalen Standardfehler an. Auf Regressionmodelle gehen wir zum Abschluss des Moduls noch intensiv ein.\n\nWas, wenn wir mehr als drei Variablen (bzw. unterschiedliche Ausprägungen einer kategorialen Variable) darstellen wollen? Neben der Positionierung auf der x- und y-Achse und der Farbe können wir hier zusätzlich auch noch mit unterschiedlichen Formen arbeiten.\n\nDas nachstehende Beispiel ist nicht unbedingt besonders informativ, zeigt aber das Prinzip nachvollziehbar auf.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(einkommen, aes(alter, einkommen, color = bildung, shape = geschlecht)) +\n  geom_jitter(width = .5, height = .5, size = 2) +\n  #geom_smooth(method = 'lm', formula = 'y ~ x', se = FALSE) + \n  ggtitle(\"Zusammenhang zwischen Alter und Nettoeinkommen \") + \n  xlab(\"Alter\") + ylab(\"Nettoeinkommen\") + \n  labs(color = \"Bildungsabschluss\") + labs(shape = \"Geschlecht\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Streudiagramm mit vier Farben und zwei Formen-1.png){width=672}\n:::\n:::\n\n\n## Facettierte Plots\n\nNeben dem Einsatz unterschiedlicher Farben und Formen kann auch sog. Facettierung zum Einsatz kommen um zusätzliche Informationen darzustellen. In einem weiteren Beispiel nehmen wir den Zusammenhang zwischen soziodemographischen Variablen und der Internetnutzung in den Blick. Dazu fügen wir zunächst eine Variable Altersgruppe ein, welche die einzelnen Altersangaben in Kohorten zusammenfasst.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media <- sample_gross %>% \n  mutate(altersgruppe = cut(alter, \n                           breaks = c(0, 24, 34, 44, 54, 64, Inf),\n                           labels = c(\"18-24\", \"25-34\", \"35-44\", \"45-54\", \"55-64\", \"65+\")),\n         zufriedenheit_demokratie_zusammengefasst = as_factor(case_when(\n           zufriedenheit_demokratie %in% c(\"SEHR ZUFRIEDEN\", \n                                           \"ZIEMLICH ZUFRIEDEN\", \n                                           \"ETWAS ZUFRIEDEN\") ~ \"eher zufrieden\",\n           zufriedenheit_demokratie %in% c(\"ETWAS UNZUFRIEDEN\",\n                                           \"ZIEML. UNZUFRIEDEN\",\n                                           \"SEHR UNZUFRIEDEN\") ~ \"eher unzufrieden\"))) %>% \n  select(altersgruppe, geschlecht, zufriedenheit_demokratie_zusammengefasst, social_media_nachrichtenquelle)\n```\n:::\n\n\nDann aggregieren wir nach Altersgruppe, Geschlecht und Land und plotten anschließend die Ergebnisse.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsocial_media_aggregiert <- social_media %>% \n  group_by(altersgruppe, geschlecht, zufriedenheit_demokratie_zusammengefasst) %>% \n  summarise(socmedia = median(social_media_nachrichtenquelle)) %>% \n  drop_na()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'altersgruppe', 'geschlecht'. You can\noverride using the `.groups` argument.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(social_media_aggregiert, aes(altersgruppe, socmedia, fill = geschlecht)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_grid(cols = vars(zufriedenheit_demokratie_zusammengefasst)) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +\n  ggtitle(\"Demokratiezufriedenheit und Social Media-Nutzung nach Alter und Geschlecht\") + \n  xlab(\"Alter\") + ylab(\"Nutzung von Social Media als Nachrichtenquelle\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/Demokratiezufriedenheit und Social Media-Nutzung nach Alter plotten-1.png){width=672}\n:::\n:::\n\n\nSie können Ihr einfaches Diagramm mit Hilfe zusätzlicher Komponenten verfeinern, indem Sie sie dem Diagramm hinzufügen (für ein sehr einfaches \"Vokabular\" von ggplot2 besuchen Sie diesen Link --\\> (https://ggplot2.tidyverse.org/reference/).\n\nAls nächstes schauen wir die Zustimmung zu der Aussafe an, dass der globale Klimawandel größtenteils oder vollständig durch den Menschen verursacht wird.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvertrauen_summiert <- sample_gross %>% \n  rowwise() %>% \n  mutate(vertrauen_gesamt = sum(across(starts_with(\"vertrauen_\")))) %>% \n  select(alter, geschlecht, entwicklung_kriminalitaet, vertrauen_gesamt) %>% \n  ungroup() %>% \n  drop_na()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(vertrauen_summiert, aes(entwicklung_kriminalitaet, vertrauen_gesamt)) +\n  geom_boxplot() + geom_jitter(alpha = 0.3) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +\n  ggtitle(\"Kriminalitätseinschätzung und Vertrauen in gesellschaftliche Institutionen\") + \n  xlab(\"Kriminalitätseinschätzung\") + ylab(\"Vertrauen in gesellschaftliche Institutionen\")\n```\n\n::: {.cell-output-display}\n![](Skript_3.4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(\"Kriminalität_und_Vertrauen.pdf\")\n```\n:::\n",
    "supporting": [
      "Skript_3.4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}