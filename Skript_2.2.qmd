---
title: "Einlesen von Datensätzen in unterschiedlichen Formaten"
author: "Cornelius Puschmann"
toc: true
number-sections: true
highlight-style: pygments
format:
  html:
    code-fold: false
    code-line-numbers: true
---

# Einlesen von Datensätzen in unterschiedlichen Formaten

Um mit größeren Datensätzen arbeiten zu können, müssen diese zunächst eingelesen werden. Um Daten in R einzulesen, gibt es verschiedene Möglichkeiten. Die gebräuchlichste Methode ist die Verwendung von Funktionen. Zum Glück bietet R hierzu eine Reihe nützlicher Funktionen für ganz unterschiedliche Dateiformate, z. B. CSV-, Excel-, SPSS- und STATA-Dateien.

Zunächst laden wir  Pakete, die für den Import von Dateien in den o.g. Formaten nützlich sind. 

```{r}
library(readr)
library(readxl)
```

## CSV-Dateien

CSV-Dateien sind die einfachste Art von Daten, die in R eingelesen werden können. Sie sind als Textdateien gespeichert, wobei die Werte durch Kommas (oder manchmal Semikolons oder Tab-Zeichen) getrennt sind. Um eine CSV-Datei in R einzulesen, können Sie die Funktion read_csv (bzw. hier read_csv2) aus dem Paket readr verwenden.

Dieser Code importiert die Datei geschlechterverteilung.csv in das R-Environment. Die Datei geschlechterverteilung.csv muss im gleichen Verzeichnis wie der R-Code gespeichert sein.

```{r Importieren einer CSV-Datei}
daten_csv <- read_csv2("geschlechterverteilung.csv")
```

Die Funktion read_csv2 liefert hier eine Menge zusätzlicher Informationen, etwa dazu, welche Datentypen für die eingelesenen Variablen gewählt wurden. Es wurde hier deshalb nicht read_csv sondern read_csv2 gewählt, weil letztere das Semikolon (;) als Trennzeichen und das Komma (,) als Dezimalzeichen verwendet. Hingegen geht read_csv vom Komma als Trennzeichen und dem Punkt als Dezimalzeichen aus, wie im angelsächsischem Gebrauch üblich. Liest man also mit der falschen Funktion ein, sind die Daten unter Umständen fehlerhaft.

## Excel-Dateien

Ebenfalls nützlich ist die Möglichkeit, Daten aus Microsoft Excel in R zu imoportiern. Excel-Dateien können mit der Funktion readxl::read_excel() in R eingelesen werden. Diese Funktion unterstützt alle gängigen Excel-Formate, einschließlich XLSX, XLS und CSV.

```{r}
daten_excel <- read_excel("geschlechterverteilung.xlsx")
```

## SPSS- und Stata-Dateien

SPSS-Dateien können mit der Funktion haven::read.spss() in R eingelesen werden. Diese Funktion unterstützt alle gängigen SPSS-Formate, einschließlich SAV und DSP.

Code snippet
# Importieren einer SPSS-Datei
data <- foreign::read.spss("data.sav")
Use code with caution. Learn more
STATA-Dateien

STATA-Dateien können mit der Funktion foreign::read.dta() in R eingelesen werden. Diese Funktion unterstützt alle gängigen STATA-Formate, einschließlich DTA und DTB.

Code snippet
# Importieren einer STATA-Datei
data <- foreign::read.dta("data.dta")
Use code with caution. Learn more
Andere Datenformate

Für andere Datenformate gibt es in der Regel spezielle Funktionen, die in den entsprechenden Paketen enthalten sind. Zum Beispiel kann die Funktion readr::read_tsv() für das Einlesen von TSV-Dateien verwendet werden.

Optionen für das Einlesen von Daten

Die meisten Funktionen zum Einlesen von Daten haben eine Reihe von Optionen, mit denen Sie den Importprozess anpassen können. Zu den häufigsten Optionen gehören:

header: Gibt an, ob die Datendatei eine Kopfzeile enthält.
sep: Gibt das Trennzeichen zwischen den Werten an.
dec: Gibt das Dezimaltrennzeichen an.
na: Gibt an, wie fehlende Werte codiert werden sollen.
Beispiel

Im Folgenden sehen Sie ein Beispiel für das Einlesen einer CSV-Datei mit fehlenden Werten:

Code snippet
# Importieren einer CSV-Datei mit fehlenden Werten
data <- read.csv("data.csv", na="NA")
Use code with caution. Learn more
Dieser Code importiert die Datei data.csv in R. Die Datei data.csv enthält einige fehlende Werte, die mit dem Wert NA codiert sind.

## Fazit

Es gibt verschiedene Möglichkeiten, Daten in R einzulesen. Die gebräuchlichste Methode ist die Verwendung von Funktionen. Für jedes gängige Datenformat gibt es eine entsprechende Funktion.


