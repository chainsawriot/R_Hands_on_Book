geom_bar(position = "fill") +
labs(title = "Verteilung der Einkommensgruppe nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("darkseagreen","grey", "lightblue")) +
rotate_x_text(45)
daten_neu <- daten %>%
filter(between(Einkommensgruppe, 1, 25))%>%
mutate(sex = as.numeric(sex)) %>%
filter(between(sex, 1, 3))
kreuztabelle_2 <- table(daten_neu$sex, daten_neu$Einkommensgruppe)
print(kreuztabelle_2)
daten_neu <- daten_neu %>%
mutate(Einkommensgruppe = haven::as_factor(Einkommensgruppe),
sex = haven::as_factor(sex))
ggplot(daten_neu, aes(x = Einkommensgruppe, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Einkommensgruppe nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("darkseagreen","grey", "lightblue")) +
rotate_x_text(45)
chisq.test(kreuztabelle_2)
cramers_v <- cramersV(kreuztabelle_2)
paste0("Cramér's V: ", cramers_v)
daten %>%
ggline(x= "gesund",
y = "trustges",
add = "mean_ci",
title = "Vertrauen in das Gesundheitswesen",
xlab = "Gesundheitszustand",
ylab = "Vertrauen in das Gesundheitswesen") +
rotate_x_text(45)
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(knitr,car, tidyverse, ggplot2, ggpubr, DescTools, dplyr,afex, emmeans, PMCMRplus, sjmisc)
theme_set(theme_classic())
options(scipen = 999)
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
#Histogramm ausgeben
ggplot(daten, aes(trustges)) + #<1>
geom_histogram(aes(y = after_stat(count)), #<2>
color = "black", fill = "grey",
binwidth = 1) + #<3>
labs(x = "Vertrauen in das Gesundheitswesen", #<4>
y = "")
LillieTest(daten$trustges)
shapiro.test(daten$trustges)
#Levene-Test für einfaktorielle Varianzanalyse
daten %>%
leveneTest(trustges ~ gesund, data = ., center = mean) #<1>
#Levene-Test für mehrfaktorielle Varianzanalyse ausgeben
daten %>%
leveneTest(trustges ~ gesund*agef, data = ., center = mean) #<2>
daten %>%
group_by(gesund) %>% #<1>
summarise(Mittelwert = mean(trustges, na.rm = T), #<1>
Standardabweichung = sd(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "M", "SD"), caption = "Descriptives Vertrauen") #<2>
#Einfaktorielle ANOVA
fit <- daten %>%
aov_car(trustges ~ gesund + Error(respid), data = ., anova_table = "pes") #<1>
print(fit)
#Tukey Post-Hoc Test
emmeans::emmeans(fit, specs = "gesund") %>%
pairs()
#Tamhame T2 Test
daten %>%
aov(trustges ~ gesund, data = .) %>%
tamhaneT2Test(.)
daten %>%
ggline(x= "gesund",
y = "trustges",
add = "mean_ci",
title = "Vertrauen in das Gesundheitswesen",
xlab = "Gesundheitszustand",
ylab = "Vertrauen in das Gesundheitswesen") +
rotate_x_text(45)
source("~/.active-rstudio-document", echo=TRUE)
theme_set(theme_classic())
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(haven, readr, dplyr)
theme_set(theme_classic())
?theme_set
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(knitr,car, tidyverse, ggplot2, ggpubr, effectsize, DescTools, dplyr,afex, emmeans, PMCMRplus, sjmisc) #<1>
theme_set(theme_classic()) #<2>
options(scipen = 999) #<3>
options(es.use_symbols = TRUE) #<4>
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
#Histogramm ausgeben
ggplot(daten, aes(trustges)) + #<1>
geom_histogram(aes(y = after_stat(count)), #<2>
color = "black", fill = "grey",
binwidth = 1) + #<3>
labs(x = "Vertrauen in das Gesundheitswesen", #<4>
y = "")
LillieTest(daten$trustges)
shapiro.test(daten$trustges)
#Levene-Test für einfaktorielle Varianzanalyse
daten %>%
leveneTest(trustges ~ gesund, data = ., center = mean) #<1>
#Levene-Test für mehrfaktorielle Varianzanalyse ausgeben
daten %>%
leveneTest(trustges ~ gesund*agef, data = ., center = mean) #<2>
daten %>%
group_by(gesund) %>% #<1>
summarise(Mittelwert = mean(trustges, na.rm = T), #<1>
Standardabweichung = sd(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "M", "SD"), caption = "Descriptives Vertrauen") #<2>
#Einfaktorielle ANOVA
fit <- daten %>%
aov_car(trustges ~ gesund + Error(respid), data = ., anova_table = "pes") #<1>
print(fit)
eta_squared(fit, partial = F) #<2>
#Tukey Post-Hoc Test
emmeans::emmeans(fit, specs = "gesund") %>%
pairs()
daten %>%
ggline(x= "gesund", #<1>
y = "trustges", #<1>
add = "mean_ci", #<2>
title = "Vertrauen in das Gesundheitswesen", #<3>
xlab = "Gesundheitszustand", #<3>
ylab = "Vertrauen in das Gesundheitswesen") + #<3>
rotate_x_text(45) #<4>
kruskal.test(trustges ~ gesund, data = daten)
daten %>%
group_by(agef, gesund) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "Alter", "M", "SD"), caption = "Descriptives Vertrauen")
daten %>%
group_by(gesund, agef) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "Alter", "M", "SD"), caption = "Descriptives Vertrauen")
#Tukey Post-Hoc Test
emmeans::emmeans(fit2, specs = c("gesund", "agef")) %>%
pairs()
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(knitr,car, tidyverse, ggplot2, ggpubr, effectsize, DescTools, dplyr,afex, emmeans, PMCMRplus, sjmisc) #<1>
theme_set(theme_classic()) #<2>
options(scipen = 999) #<3>
options(es.use_symbols = TRUE) #<4>
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
#Histogramm ausgeben
ggplot(daten, aes(trustges)) + #<1>
geom_histogram(aes(y = after_stat(count)), #<2>
color = "black", fill = "grey",
binwidth = 1) + #<3>
labs(x = "Vertrauen in das Gesundheitswesen", #<4>
y = "")
LillieTest(daten$trustges)
shapiro.test(daten$trustges)
#Levene-Test für einfaktorielle Varianzanalyse
daten %>%
leveneTest(trustges ~ gesund, data = ., center = mean) #<1>
#Levene-Test für mehrfaktorielle Varianzanalyse ausgeben
daten %>%
leveneTest(trustges ~ gesund*agef, data = ., center = mean) #<2>
daten %>%
group_by(gesund) %>% #<1>
summarise(Mittelwert = mean(trustges, na.rm = T), #<1>
Standardabweichung = sd(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "M", "SD"), caption = "Descriptives Vertrauen") #<2>
#Einfaktorielle ANOVA
fit <- daten %>%
aov_car(trustges ~ gesund + Error(respid), data = ., anova_table = "pes") #<1>
print(fit)
eta_squared(fit, partial = F) #<2>
#Tukey Post-Hoc Test
emmeans::emmeans(fit, specs = "gesund") %>%
pairs()
daten %>%
ggline(x= "gesund", #<1>
y = "trustges", #<1>
add = "mean_ci", #<2>
title = "Vertrauen in das Gesundheitswesen", #<3>
xlab = "Gesundheitszustand", #<3>
ylab = "Vertrauen in das Gesundheitswesen") + #<3>
rotate_x_text(45) #<4>
kruskal.test(trustges ~ gesund, data = daten)
daten %>%
group_by(agef) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Alter", "M", "SD"), caption = "Descriptives Vertrauen")
daten %>%
group_by(gesund, agef) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "Alter", "M", "SD"), caption = "Descriptives Vertrauen")
fit2 <- daten %>%
afex::aov_car(trustges ~ gesund * agef + Error(respid),
data = ., anova_table = "pes")
print(fit2)
#Tukey Post-Hoc Test
emmeans::emmeans(fit2, specs = c("gesund", "agef")) %>%
pairs()
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(trustges = group_var(size = 3)) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(knitr,car, tidyverse, ggplot2, ggpubr, effectsize, DescTools, dplyr,afex, emmeans, PMCMRplus, sjmisc) #<1>
theme_set(theme_classic()) #<2>
options(scipen = 999) #<3>
options(es.use_symbols = TRUE) #<4>
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(trustges = group_var(size = 3)) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(knitr,car, tidyverse, ggplot2, ggpubr, effectsize, DescTools, dplyr,afex, emmeans, PMCMRplus, sjmisc) #<1>
theme_set(theme_classic()) #<2>
options(scipen = 999) #<3>
options(es.use_symbols = TRUE) #<4>
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(knitr,car, tidyverse, ggplot2, ggpubr, effectsize, DescTools, dplyr,afex, emmeans, PMCMRplus, sjmisc) #<1>
theme_set(theme_classic()) #<2>
options(scipen = 999) #<3>
options(es.use_symbols = TRUE) #<4>
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
#Histogramm ausgeben
ggplot(daten, aes(trustges)) + #<1>
geom_histogram(aes(y = after_stat(count)), #<2>
color = "black", fill = "grey",
binwidth = 1) + #<3>
labs(x = "Vertrauen in das Gesundheitswesen", #<4>
y = "")
LillieTest(daten$trustges)
shapiro.test(daten$trustges)
#Levene-Test für einfaktorielle Varianzanalyse
daten %>%
leveneTest(trustges ~ gesund, data = ., center = mean) #<1>
#Levene-Test für mehrfaktorielle Varianzanalyse ausgeben
daten %>%
leveneTest(trustges ~ gesund*agef, data = ., center = mean) #<2>
daten %>%
group_by(gesund) %>% #<1>
summarise(Mittelwert = mean(trustges, na.rm = T), #<1>
Standardabweichung = sd(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "M", "SD"), caption = "Descriptives Vertrauen") #<2>
#Einfaktorielle ANOVA
fit <- daten %>%
aov_car(trustges ~ gesund + Error(respid), data = ., anova_table = "pes") #<1>
print(fit)
eta_squared(fit, partial = F) #<2>
#Tukey Post-Hoc Test
emmeans::emmeans(fit, specs = "gesund") %>%
pairs()
daten %>%
ggline(x= "gesund", #<1>
y = "trustges", #<1>
add = "mean_ci", #<2>
title = "Vertrauen in das Gesundheitswesen", #<3>
xlab = "Gesundheitszustand", #<3>
ylab = "Vertrauen in das Gesundheitswesen") + #<3>
rotate_x_text(45) #<4>
kruskal.test(trustges ~ gesund, data = daten)
daten %>%
group_by(agef) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Alter", "M", "SD"), caption = "Descriptives Vertrauen")
daten %>%
group_by(gesund, agef) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "Alter", "M", "SD"), caption = "Descriptives Vertrauen")
fit2 <- daten %>%
afex::aov_car(trustges ~ gesund * agef + Error(respid),
data = ., anova_table = "pes")
print(fit2)
#Tukey Post-Hoc Test
emmeans::emmeans(fit2, specs = c("gesund", "agef")) %>%
pairs()
#Interaktionsplot ausgeben
emmip(fit2, agef ~ gesund) + #<1>
labs(title = "Geschätzes Randmittel von Vertrauen in das Gesundheitswesen", #<2>
y = "Geschätzte Randmittel",
x = "Gesundheitszustand") +
scale_color_manual(values = c("darkgreen", "tan4"), name = "Altersgruppe") #<3>
#Interaktionsplot ausgeben
emmip(fit2, agef ~ gesund) + #<1>
labs(title = "Geschätzes Randmittel von Vertrauen in das Gesundheitswesen", #<2>
y = "Geschätzte Randmittel",
x = "Gesundheitszustand") +
scale_color_manual(values = c("darkgreen", "tan4"), name = "Altersgruppe") + #<3>
rotate_x_text(45) #<4>
?emmeans::emmeans
#Tukey Post-Hoc Test
emmeans::emmeans(fit2, specs = c("gesund", "agef"))
#Tukey Post-Hoc Test
emmeans::emmeans(fit2, specs = c("gesund", "agef")) %>%
pairs()
tukey <- emmeans::emmeans(fit2, specs = c("gesund", "agef")) %>%
pairs()
tukey <- emmeans::emmeans(fit2, specs = c("gesund", "agef")) %>%
pairs()
str(tukey)
names(tukey)
tukey$p
emmeans::emmeans(fit2, specs = c("gesund", "agef")) %>%
pairs()
#Tukey Post-Hoc Test
emmeans::emmeans(fit, specs = "gesund") %>%
pairs()
#Tamhame T2 Test
daten %>%
aov(trustges ~ gesund, data = .) %>%
tamhaneT2Test(.)
#Interaktionsplot ausgeben
emmip(fit2, agef ~ gesund) + #<1>
labs(title = "Geschätzes Randmittel von Vertrauen in das Gesundheitswesen", #<2>
y = "Geschätzte Randmittel",
x = "Gesundheitszustand") +
scale_color_manual(values = c("darkgreen", "tan4"), name = "Altersgruppe") + #<3>
rotate_x_text(45) #<4>
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(knitr,car, tidyverse, ggplot2, ggpubr, effectsize, DescTools, dplyr,afex, emmeans, PMCMRplus, sjmisc) #<1>
theme_set(theme_classic()) #<2>
options(scipen = 999) #<3>
options(es.use_symbols = TRUE) #<4>
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
#Histogramm ausgeben
ggplot(daten, aes(trustges)) + #<1>
geom_histogram(aes(y = after_stat(count)), #<2>
color = "black", fill = "grey",
binwidth = 1) + #<3>
labs(x = "Vertrauen in das Gesundheitswesen", #<4>
y = "")
LillieTest(daten$trustges)
shapiro.test(daten$trustges)
#Levene-Test für einfaktorielle Varianzanalyse
daten %>%
leveneTest(trustges ~ gesund, data = ., center = mean) #<1>
#Levene-Test für mehrfaktorielle Varianzanalyse ausgeben
daten %>%
leveneTest(trustges ~ gesund*agef, data = ., center = mean) #<2>
daten %>%
group_by(gesund) %>% #<1>
summarise(Mittelwert = mean(trustges, na.rm = T), #<1>
Standardabweichung = sd(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "M", "SD"), caption = "Descriptives Vertrauen") #<2>
#Einfaktorielle ANOVA
fit <- daten %>%
aov_car(trustges ~ gesund + Error(respid), data = ., anova_table = "pes") #<1>
print(fit)
eta_squared(fit, partial = F) #<2>
emmeans::emmeans(fit, specs = "gesund") %>% #<1>
pairs()
daten %>%
aov(trustges ~ gesund, data = .) %>%
tamhaneT2Test(.)
daten %>%
ggline(x= "gesund", #<1>
y = "trustges", #<1>
add = "mean_ci", #<2>
title = "Vertrauen in das Gesundheitswesen", #<3>
xlab = "Gesundheitszustand", #<3>
ylab = "Vertrauen in das Gesundheitswesen") + #<3>
rotate_x_text(45) #<4>
kruskal.test(trustges ~ gesund, data = daten)
daten %>%
group_by(agef) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Alter", "M", "SD"), caption = "Descriptives Vertrauen")
daten %>%
group_by(gesund, agef) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "Alter", "M", "SD"), caption = "Descriptives Vertrauen")
fit2 <- daten %>%
afex::aov_car(trustges ~ gesund * agef + Error(respid),
data = ., anova_table = "pes")
print(fit2)
emmeans::emmeans(fit2, specs = c("gesund", "agef")) %>%
pairs()
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(knitr,car, tidyverse, ggplot2, ggpubr, effectsize, DescTools, dplyr,afex, emmeans, PMCMRplus, sjmisc) #<1>
theme_set(theme_classic()) #<2>
options(scipen = 999) #<3>
options(es.use_symbols = TRUE) #<4>
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
filter(., hs01 > 0 & pt01 > 0 & age > 0) %>% #<1>
rename(., gesund = hs01, #<2>
trustges = pt01) %>%
mutate(gesund = haven::as_factor(gesund), #<3>
trustges = as.numeric(trustges),
agef = dicho(age, as.num = T) %>% factor(levels = c(0,1), labels = c("jung", "alt"))) #<4>
#Histogramm ausgeben
ggplot(daten, aes(trustges)) + #<1>
geom_histogram(aes(y = after_stat(count)), #<2>
color = "black", fill = "grey",
binwidth = 1) + #<3>
labs(x = "Vertrauen in das Gesundheitswesen", #<4>
y = "")
LillieTest(daten$trustges)
shapiro.test(daten$trustges)
#Levene-Test für einfaktorielle Varianzanalyse
daten %>%
leveneTest(trustges ~ gesund, data = ., center = mean) #<1>
#Levene-Test für mehrfaktorielle Varianzanalyse ausgeben
daten %>%
leveneTest(trustges ~ gesund*agef, data = ., center = mean) #<2>
daten %>%
group_by(gesund) %>% #<1>
summarise(Mittelwert = mean(trustges, na.rm = T), #<1>
Standardabweichung = sd(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "M", "SD"), caption = "Descriptives Vertrauen") #<2>
#Einfaktorielle ANOVA
fit <- daten %>%
aov_car(trustges ~ gesund + Error(respid), data = ., anova_table = "pes") #<1>
print(fit)
eta_squared(fit, partial = F) #<2>
emmeans::emmeans(fit, specs = "gesund") %>% #<1>
pairs()
daten %>%
aov(trustges ~ gesund, data = .) %>%
tamhaneT2Test(.)
daten %>%
ggline(x= "gesund", #<1>
y = "trustges", #<1>
add = "mean_ci", #<2>
title = "Vertrauen in das Gesundheitswesen", #<3>
xlab = "Gesundheitszustand", #<3>
ylab = "Vertrauen in das Gesundheitswesen") + #<3>
rotate_x_text(45) #<4>
kruskal.test(trustges ~ gesund, data = daten)
daten %>%
group_by(agef) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Alter", "M", "SD"), caption = "Descriptives Vertrauen")
daten %>%
group_by(gesund, agef) %>%
summarise(Mittelwert = mean(trustges, na.rm = T),
Standardabweichung = SD(trustges, na.rm = T)) %>%
kable(digits = 2, col.names = c("Gesundheitszustand", "Alter", "M", "SD"), caption = "Descriptives Vertrauen")
fit2 <- daten %>%
afex::aov_car(trustges ~ gesund * agef + Error(respid),
data = ., anova_table = "pes")
print(fit2)
emmeans::emmeans(fit2, specs = c("gesund", "agef")) %>%
pairs()
