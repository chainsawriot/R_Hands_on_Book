erstis$prozentrang.neuro<-neuro.transf$p.scores
neuro.transf <- score.transform(neuro)erstis$prozentrang.neuro <- neuro.transf$p.scores
neuro.transf <- score.transform(neuro),erstis$prozentrang.neuro <- neuro.transf$p.scores
neuro.transf <- score.transform(neuro)
erstis$prozentrang.neuro <- neuro.transf$p.scores
erstis$prozentrang.neuro[59]
describe(1z.1)
describe(data.frame(1z.1))
describe(lz.1)
describe(neuro,extra,gewiss,vertraeg,intell)
describe(neuro,extra,gewiss,vertraeg,intell,na.rm=T)
describeBy(lz.1,geschl)
median(stim5)
median(stim5,na.rm=T)
range(stim5,na.rm=T)
which.max(stim5)
table(berlin,geschl)
addmargins(table(berlin,geschl))
prop.table(table(berlin,geschl))
addmargins(prop.table(table(berlin,geschl))
addmargins(prop.table(table(berlin,geschl))
addmargins(prop.table(table(berlin,geschl)))
100*addmargins(prop.table(table(berlin,geschl)))
100*addmargins(prop.table(table(berlin,geschl)),2)
mean(alter)
hist(alter)
install.packages("lavaan")
library(lavaan)
detach("package:lavaan", unload=TRUE)
plot(age)
plot(alter)
auswahl<-data.frame(alter, abi, zuf.inh.1)
attach(erstis)
auswahl<-data.frame(alter, abi, zuf.inh.1)
cor(auswahl)
auswahl<-data.frame(alter, abi, zufinh.1)
attach(erstis)
load("~/R_Analysen/Daten/Erstis/erstis.RData")
View(erstis)
attach(erstis)
auswahl<-data.frame(alter, abi, zufinh.1)
auswahl<-data.frame(alter, abi, zuf.inh.1)
cor(alter, abi)
auswahl<-data.frame(alter, abi, zufinh.1, use="complete")
auswahl<-data.frame(alter, abi, zuf.inh.1, use="complete")
auswahl.data.frame(gevjahr, abi, kinder)
auswahl<-data.frame(gebjahr, abi, kinder)
cor(auswahl)
auswahl<-data.frame(gebjahr,alter, stim1)
auswahl<-data.frame(stim1, stim2, stim3)
cor(auswahl)
cor(auswahl, use="complete")
cor(auswahl, use="pairwaise")
cor(auswahl, use="pairwise")
library(psych)
corr.test(auswahl)
d<-describe(auswahl)
c<-corr.test(auswahl)
t<-cbind(M=d$mean, SD=d$sd,c)
cor.test(alter,abi)
cor.test(stim1,stim2)
cor.test(stim1,stim2,alternative="greater")
cov(stim1,stim2,use="complete")
auswahl<-data.frame(stim1,stim2,stim3)
cov(auswahl,use="pairwise")
var(alter,na.rm=T)
var(stim1,na.rm=T)
auswahl<-(gewiss,prok)
auswahl<-(gewiss,prok)
auswahl<-(gewiss, prok)
corr.test(gewiss,prok)
cor.test(gewiss, prok)
table(uni3,uni8)
addmargins(table(uni3,uni8))
table(extra,vertraeg,gewiss,neuro,intell)
auswahl<-data.frame(extra,vertraeg,gewiss,neuro,intell)
cor(auswahl)
cor(auswahl,use="complete")
corr.test(auswahl)
cor(lz.1,extra)
cor(lz.1,extra,use="pairwise")
cor(lz.1,extra,neuro="pairwise")
cor(lz.1,neuro,use="pairwise")
glück<-data.frame(lz.1,neuro,extra)
corr.test(glück)
demo(graphics)
barplot(wohnort.alt)
barplot(table(wohnort.alt))
barplot(prop.table(table(wohnort.alt)))
barplot(table(wohnort.alt))
barplot(prop.table(table(wohnort.alt)))
barplot((table(wohnort.alt), horiz=T,las=1)
library("abind", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ggplot2")
download.packages("igraph")
install.packages("igraph")
library("igraph")
demo(package="igraph")
demo(centrality)
demo(cohesive)
demo(community)
demo(crashR)
demo(hrg)
demo(smallworld)
R> install.packages(“statnet”)
install.packages("statnet")
library("statnet")
install.packages("igraphdata")
install.packages("ergmharris")
install.packages("intergraph")
install.packages("reshape2")
model.2 <- ergm( net ~ edges  + gwesp(0.01, fixed = T) +
nodematch('Gender')  + nodematch('Mourning')+ nodematch('Noble') +
nodecov('Popularity') + nodecov('NumDeath'),
control.ergm=c(seed=1234,MCMCsamplesize=1000))
summary(model.2)
model.2.gof <- gof(model.2 ~ degree + distance)
plot(model.2.gof)
library(intergraph)
library(igraph)
bib <- bibcoupling(g)
edg <- get.edgelist(g, names=F)
edge_share <- table(bib[edg])
esp_values <- c(0:20)
fre <- as.vector(edge_share)
alpha <- c(0.01, 0.1, 0.25,0.5, 0.7, 1)
for(i in 1:length(alpha)){
print(alpha[i])
print( (  1-( 1-exp(-alpha[i]) )^esp_values  )*fre )
cat('empirical comparison')
print(edge_share)
cat('\n')
}
# alpha = 0.01 seems best choice
### MODELL 1: network endegenous effects + plus homophily
model.1 <- ergm( net ~ edges  + gwesp(0.01, fixed = T)  +
nodematch('Gender') + nodematch('Mourning') + nodematch('Noble'),
control.ergm=c(seed=1234,MCMCsamplesize=1000)) ## if you have time to kill: try to do it WITHOUT gwesp
summary(model.1)
model.1.gof <- gof(model.1 ~ degree + distance)
plot(model.1.gof)
## "Okish" fit, but seems uninteresting
library(intergraph)
library(igraph)
bib <- bibcoupling(g)
edg <- get.edgelist(g, names=F)
edge_share <- table(bib[edg])
esp_values <- c(0:20)
fre <- as.vector(edge_share)
alpha <- c(0.01, 0.1, 0.25,0.5, 0.7, 1)
for(i in 1:length(alpha)){
print(alpha[i])
print( (  1-( 1-exp(-alpha[i]) )^esp_values  )*fre )
cat('empirical comparison')
print(edge_share)
cat('\n')
}
# alpha = 0.01 seems best choice
### MODELL 1: network endegenous effects + plus homophily
model.1 <- ergm( net ~ edges  + gwesp(0.01, fixed = T)  +
nodematch('Gender') + nodematch('Mourning') + nodematch('Noble'),
control.ergm=c(seed=1234,MCMCsamplesize=1000)) ## if you have time to kill: try to do it WITHOUT gwesp
summary(model.1)
model.1.gof <- gof(model.1 ~ degree + distance)
plot(model.1.gof)
## "Okish" fit, but seems uninteresting
### MODELL 2: network endegenous effects + plus homophily plus popularity
model.2 <- ergm( net ~ edges  + gwesp(0.01, fixed = T) +
nodematch('Gender')  + nodematch('Mourning')+ nodematch('Noble') +
nodecov('Popularity') + nodecov('NumDeath'),
control.ergm=c(seed=1234,MCMCsamplesize=1000))
summary(model.2)
model.2.gof <- gof(model.2 ~ degree + distance)
plot(model.2.gof)
v <- cov[cov$house == '',]
# DELETE those vertices [ATTENTION: vertice index is not dynamic, thus you have to adapt your count value]
for(i in 1:length(rownames(v))){
network::delete.vertices(net, as.numeric(rownames(v)[i]) - (i-1))
}
# check out if it worked
c('Shae') %in% network.vertex.names(net)
c('Robb') %in% network.vertex.names(net)
model.2.select <- ergm( net ~ edges  + gwesp(0.01, fixed = T) +
nodematch('Gender')  + nodematch('Mourning')+ nodematch('Noble') + nodematch('House') +
nodecov('Popularity') + nodecov('NumDeath'),
control.ergm=c(seed=1234,MCMCsamplesize=1000))
summary(model.2.select)
model.2.select.gof <- gof(model.2.select ~ degree + distance)
plot(model.2.select.gof)
library(statnet)
library(foreign)
library(car)
ESS <- read.dta("ESS8.dta")
install.packages("haven")
install.packages("tidyverse")
install.packages("vcd")
library(tidyverse)
library(haven)
library(vcd)
install.packages("haven")
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
rename(Konfession = rd01)%>%
filter(between(Konfession, 1, 6))%>%
filter(between(sex, 1, 3))
kreuztabelle <- table(daten$sex, daten$Konfession)
print(kreuztabelle)
library(ggplot2)
daten$Konfession <- as.factor(daten$Konfession)
daten$sex <- as.factor(daten$sex)
ggplot(daten, aes(x = Konfession, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Konfessionszugehörigkeit nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("blue", "red", "green")) # Farben anpassen
chisq.test(kreuztabelle)
cramers_v <- assocstats(kreuztabelle)$cramersV
print(cramers_v)
cramers_v <- assocstats(kreuztabelle)$cramersV
print(cramers_v)
chisq.test(kreuztabelle)
cramers_v <- assocstats(kreuztabelle)$cramersV
print(cramers_v)
kreuztabelle <- table(daten$sex, daten$Konfession)
print(kreuztabelle)
library(ggplot2)
daten$Konfession <- as.factor(daten$Konfession)
daten$sex <- as.factor(daten$sex)
ggplot(daten, aes(x = Konfession, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Konfessionszugehörigkeit nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("blue", "red", "green")) # Farben anpassen
chisq.test(kreuztabelle)
cramers_v <- assocstats(kreuztabelle)$cramersV
print(cramers_v)
kreuztabelle <- table(daten$sex, daten$Konfession)
print(kreuztabelle)
cramers_v <- assocstats(kreuztabelle)$cramersV
print(cramers_v)
chi_square_result <- chisq.test(kreuztabelle)
chisq.test(kreuztabelle)
result <- chisq.test(kreuztabelle)
chisq.test(kreuztabelle)
cramers_v <- assocstats(kreuztabelle)$cramersV
print(cramers_v)
# Schritt 3: Extrahiere den beobachteten Chi-Quadrat-Wert
chi_square <- chisq.test(kreuztabelle)$statistic
# Schritt 4: Berechne die Effektstärke (Cramér's V)
n <- sum(kreuztabelle)  # Gesamtanzahl der Beobachtungen
k <- nrow(kreuztabelle)  # Anzahl der Kategorien in 'sex'
r <- ncol(kreuztabelle)  # Anzahl der Kategorien in 'Konfession'
V <- sqrt(chi_square / (n * min(k-1, r-1)))
# Schritt 5: Gib den beobachteten Chi-Quadrat-Wert und Cramér's V aus
cat("Beobachteter Chi-Quadrat-Wert:", chi_square, "\n")
cat("Cramér's V:", V, "\n")
chi_square <- sum((kreuztabelle - expected)^2 / expected)  # Beobachteter Chi-Quadrat-Wert
library(vcd)
cramers_v <- CramerV(kreuztabelle)
library(vcd)
cramers_v <- CramerV(kreuztabelle)
library(vcd)
cramers_v <- cramersv(kreuztabelle)
library(vcd)
cramers_v <- cramers_v(kreuztabelle)
library(vcd)
cramers_v(kreuztabelle)
library(vcd)
cramer_v(kreuztabelle)
library(vcd)
cramers_v <- CramerV(kreuztabelle)
# Schritt 3: Extrahiere den beobachteten Chi-Quadrat-Wert
chi_square <- chisq.test(kreuztabelle)$statistic
# Schritt 4: Berechne die Effektstärke (Cramér's V)
n <- sum(kreuztabelle)  # Gesamtanzahl der Beobachtungen
k <- nrow(kreuztabelle)  # Anzahl der Kategorien in 'sex'
r <- ncol(kreuztabelle)  # Anzahl der Kategorien in 'Konfession'
V <- sqrt(chi_square / (n * min(k-1, r-1)))
# Schritt 5: Gib den beobachteten Chi-Quadrat-Wert und Cramér's V aus
cat("Beobachteter Chi-Quadrat-Wert:", chi_square, "\n")
cat("Cramér's V:", V, "\n")
daten <- daten %>%
rename(Einkommensgruppe = di02a)%>%
filter(between(Einkommensgruppe, 1, 25))%>%
filter(between(sex, 1, 3))
install.packages("haven")
install.packages("tidyverse")
install.packages("vcd")
library(tidyverse)
library(haven)
library(vcd)
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
rename(Konfession = rd01)%>%
filter(between(Konfession, 1, 6))%>%
filter(between(sex, 1, 3))
kreuztabelle <- table(daten$sex, daten$Konfession)
print(kreuztabelle)
library(ggplot2)
daten$Konfession <- as.factor(daten$Konfession)
daten$sex <- as.factor(daten$sex)
ggplot(daten, aes(x = Konfession, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Konfessionszugehörigkeit nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("blue", "red", "green")) # Farben anpassen
chisq.test(kreuztabelle)
library(vcd)
cramers_v <- CramerV(kreuztabelle)
install.packages("haven")
daten <- daten %>%
rename(Einkommensgruppe = di02a)%>%
filter(between(Einkommensgruppe, 1, 25))%>%
filter(between(sex, 1, 3))
install.packages("haven")
install.packages("tidyverse")
install.packages("vcd")
library(tidyverse)
library(haven)
library(vcd)
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
rename(Konfession = rd01)%>%
filter(between(Konfession, 1, 6))%>%
filter(between(sex, 1, 3))
kreuztabelle <- table(daten$sex, daten$Konfession)
print(kreuztabelle)
library(ggplot2)
daten$Konfession <- as.factor(daten$Konfession)
daten$sex <- as.factor(daten$sex)
ggplot(daten, aes(x = Konfession, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Konfessionszugehörigkeit nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("blue", "red", "green")) # Farben anpassen
chisq.test(kreuztabelle)
library(vcd)
cramers_v <- CramerV(kreuztabelle)
# Schritt 1: Extrahieren des beobachteten Chi-Quadrat-Werts
chi_square <- chisq.test(kreuztabelle)$statistic
# Schritt 2: Berechnen der Effektstärke (Cramér's V)
n <- sum(kreuztabelle)  # Gesamtanzahl der Beobachtungen
k <- nrow(kreuztabelle)  # Anzahl der Kategorien in 'sex'
r <- ncol(kreuztabelle)  # Anzahl der Kategorien in 'Konfession'
V <- sqrt(chi_square / (n * min(k-1, r-1)))
# Schritt 3: Ausgabe der beobachteten Chi-Quadrat-Wert und Cramér's V
cat("Beobachteter Chi-Quadrat-Wert:", chi_square, "\n")
cat("Cramér's V:", V, "\n")
daten <- daten %>%
rename(Einkommensgruppe = di02a)%>%
rename(Bildung = educ)%>%
filter(between(Einkommensgruppe, 1, 25))%>%
filter(between(Bildung, 1, 5))
result_spearman <- cor.test(daten$Einkommensgruppe, daten$Bildung, method = "spearman")
print(result_spearman)
result_kendall <- cor.test(daten$Einkommensgruppe, daten$Bildung, method = "kendall")
print(result_kendall)
daten <- daten %>%
rename(Einkommensgruppe = di02a)%>%
filter(between(Einkommensgruppe, 1, 25))%>%
filter(between(sex, 1, 3))
daten <- daten %>%
filter(between(Einkommensgruppe, 1, 25))%>%
filter(between(sex, 1, 3))
daten_neu <- daten %>%
filter(between(Einkommensgruppe, 1, 25))%>%
filter(between(sex, 1, 3))
daten_neu <- daten %>%
filter(between(Einkommensgruppe, 1, 25))%>%
mutate(sex = as.numeric(sex)) %>%
filter(between(sex, 1, 3))
str(sex)
str(daten$sex)
daten_neu <- daten %>%
filter(between(Einkommensgruppe, 1, 25))%>%
mutate(sex = as.numeric(sex)) %>%
filter(between(sex, 1, 3))
result_spearman <- cor.test(daten$sex, daten$Einkommensgruppe, method = "spearman")
result_spearman <- cor.test(daten$sex, daten$Einkommensgruppe, method = "spearman")
result_spearman <- cor.test(daten_neu$sex, daten_neu$Einkommensgruppe, method = "spearman")
print(result_spearman)
library(ggplot2)
daten_neu$Einkommensgruppe <- as.factor(daten_neu$Einkommensgruppe)
daten_neu$sex <- as.factor(daten$sex)
ggplot(daten_neu, aes(x = Einkommensgruppe, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Einkommensgruppe nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("blue", "red", "green")) # Farben anpassen
# Setze einen Paketmirror (CRAN)
chooseCRANmirror()
# Setze einen Paketmirror (CRAN)
chooseCRANmirror(39)
# Setze einen Paketmirror (CRAN)
#chooseCRANmirror(39)
install.packages("haven")
install.packages("tidyverse")
install.packages("vcd")
library(tidyverse)
library(haven)
library(vcd)
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
rename(Konfession = rd01)%>%
filter(between(Konfession, 1, 6))%>%
filter(between(sex, 1, 3))
kreuztabelle <- table(daten$sex, daten$Konfession)
print(kreuztabelle)
library(ggplot2)
daten$Konfession <- as.factor(daten$Konfession)
daten$sex <- as.factor(daten$sex)
ggplot(daten, aes(x = Konfession, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Konfessionszugehörigkeit nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("blue", "red", "green")) # Farben anpassen
chisq.test(kreuztabelle)
library(vcd)
cramers_v <- CramerV(kreuztabelle)
# Schritt 1: Extrahieren des beobachteten Chi-Quadrat-Werts
chi_square <- chisq.test(kreuztabelle)$statistic
# Schritt 2: Berechnen der Effektstärke (Cramér's V)
n <- sum(kreuztabelle)  # Gesamtanzahl der Beobachtungen
k <- nrow(kreuztabelle)  # Anzahl der Kategorien in 'sex'
r <- ncol(kreuztabelle)  # Anzahl der Kategorien in 'Konfession'
V <- sqrt(chi_square / (n * min(k-1, r-1)))
# Schritt 3: Ausgabe der beobachteten Chi-Quadrat-Wert und Cramér's V
cat("Beobachteter Chi-Quadrat-Wert:", chi_square, "\n")
cat("Cramér's V:", V, "\n")
daten <- daten %>%
rename(Einkommensgruppe = di02a)%>%
rename(Bildung = educ)%>%
filter(between(Einkommensgruppe, 1, 25))%>%
filter(between(Bildung, 1, 5))
result_spearman <- cor.test(daten$Einkommensgruppe, daten$Bildung, method = "spearman")
print(result_spearman)
result_kendall <- cor.test(daten$Einkommensgruppe, daten$Bildung, method = "kendall")
print(result_kendall)
daten_neu <- daten %>%
filter(between(Einkommensgruppe, 1, 25))%>%
mutate(sex = as.numeric(sex)) %>%
filter(between(sex, 1, 3))
result_spearman <- cor.test(daten_neu$sex, daten_neu$Einkommensgruppe, method = "spearman")
print(result_spearman)
library(ggplot2)
daten_neu$Einkommensgruppe <- as.factor(daten_neu$Einkommensgruppe)
daten_neu$sex <- as.factor(daten$sex)
ggplot(daten_neu, aes(x = Einkommensgruppe, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Einkommensgruppe nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("blue", "red", "green")) # Farben anpassen
# Setze einen Paketmirror (CRAN)
chooseCRANmirror(39)
# Setze einen Paketmirror (CRAN)
# chooseCRANmirror(39)
install.packages("haven", repos = "https://cloud.r-project.org/")
#install.packages("haven")
install.packages("tidyverse")
install.packages("vcd")
library(tidyverse)
library(haven)
library(vcd)
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
rename(Konfession = rd01)%>%
filter(between(Konfession, 1, 6))%>%
filter(between(sex, 1, 3))
library(ggplot2)
daten$Konfession <- as.factor(daten$Konfession)
daten$sex <- as.factor(daten$sex)
ggplot(daten, aes(x = Konfession, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Konfessionszugehörigkeit nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("blue", "red", "green")) # Farben anpassen
chisq.test(kreuztabelle)
library(vcd)
cramers_v <- CramerV(kreuztabelle)
# Schritt 1: Extrahieren des beobachteten Chi-Quadrat-Werts
chi_square <- chisq.test(kreuztabelle)$statistic
# Schritt 2: Berechnen der Effektstärke (Cramér's V)
n <- sum(kreuztabelle)  # Gesamtanzahl der Beobachtungen
k <- nrow(kreuztabelle)  # Anzahl der Kategorien in 'sex'
r <- ncol(kreuztabelle)  # Anzahl der Kategorien in 'Konfession'
V <- sqrt(chi_square / (n * min(k-1, r-1)))
# Schritt 3: Ausgabe der beobachteten Chi-Quadrat-Wert und Cramér's V
cat("Beobachteter Chi-Quadrat-Wert:", chi_square, "\n")
cat("Cramér's V:", V, "\n")
daten <- daten %>%
rename(Einkommensgruppe = di02a)%>%
rename(Bildung = educ)%>%
filter(between(Einkommensgruppe, 1, 25))%>%
filter(between(Bildung, 1, 5))
result_spearman <- cor.test(daten$Einkommensgruppe, daten$Bildung, method = "spearman")
print(result_spearman)
result_kendall <- cor.test(daten$Einkommensgruppe, daten$Bildung, method = "kendall")
print(result_kendall)
daten_neu <- daten %>%
filter(between(Einkommensgruppe, 1, 25))%>%
mutate(sex = as.numeric(sex)) %>%
filter(between(sex, 1, 3))
result_spearman <- cor.test(daten_neu$sex, daten_neu$Einkommensgruppe, method = "spearman")
print(result_spearman)
library(ggplot2)
daten_neu$Einkommensgruppe <- as.factor(daten_neu$Einkommensgruppe)
daten_neu$sex <- as.factor(daten$sex)
ggplot(daten_neu, aes(x = Einkommensgruppe, fill = sex)) +
geom_bar(position = "fill") +
labs(title = "Verteilung der Einkommensgruppe nach Geschlecht",
x = "Einkommensgruppe", y = "Anteil") +
scale_fill_manual(values = c("blue", "red", "green")) # Farben anpassen
