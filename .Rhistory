stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
df.log.income <- data.frame(log.incomeh=tanh(log.income))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0.3, 0.5, by = 0.001),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
df.log.income <- data.frame(log.incomeh=tanh(log.income))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0.3, 0.5, by = 0.001),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
#geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) #+
#geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
#stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
#stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
df.log.income <- data.frame(log.incomeh=tanh(log.income))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.01),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) #+
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
df.log.income <- data.frame(log.incomeh=log.income)
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.01),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) #+
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
df.log.income <- data.frame(log.incomeh=log.income)
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) #+
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
df.log.income <- data.frame(log.incomeh=log.income)
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
atan.func <- function(x, lamb, mean){
f <- lamb * atanh(x - mean)
return(f)
}
df.log.income <- data.frame(log.incomeh=atan.func(log.income))
atan.func <- function(x, lamb, mean){
f <- lamb * atanh(x - mean)
return(f)
}
df.log.income <- data.frame(log.incomeh=atan.func(log.income, 2, log.mean))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
tan.func <- function(x, lamb, mean){
f <- lamb * tanh(-x - mean)
return(f)
}
df.log.income <- data.frame(log.incomeh=atan.func(log.income, 2, log.mean))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(tidyverse, ggplot2, haven, dplyr)
theme_set(theme_classic())
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
allbus_messniveau_bsp <- subset(daten, select=c("sex", "pt12", "di01a")) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ as.numeric(.))) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ ifelse(.%in% c(-7, -9, -11, -15, -42, -50 ), NA,.))) %>%
na.omit()
df_income <- data.frame(income=allbus_messniveau_bsp$di01a)
mittel <- mean(income)
median <- median(income)
modus <- as.numeric(names(sort(table(income), decreasing = TRUE)[1]))
ggplot(df_income, aes(x = income)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10000, by = 500),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = mittel, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = median, color = "blue", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = modus, color = "green", linetype = "dashed", linewidth = 1)
ggplot(df_income, aes(x = income)) +
geom_histogram(aes(y =cumsum(..density..)),
breaks = seq(-0, 10000, by = 1),
colour = "gray",
fill = "gray") +
labs(x = "Einkommen", y = "Kumulierte Häufigkeit") +
geom_vline(xintercept = mittel, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = median, color = "blue", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = modus, color = "green", linetype = "dashed", linewidth = 1)
income_mean <- mean(allbus_messniveau_bsp$di01a)
income_sd <- sd(allbus_messniveau_bsp$di01a)
# Die Verteilungsfunktion der Normalverteilung: "p" + "norm":
pnorm(1500, mean=income_mean, sd=income_sd)
quantile(allbus_messniveau_bsp$di01a, probs = c(0.278))
q <- quantile(allbus_messniveau_bsp$di01a, probs = c(1 - 0.278))
q
pnorm(2977.378, mean=income_mean, sd=income_sd)
qnorm(0.722, mean=income_mean, sd=income_sd)
ggplot(df_income, aes(x = income)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10000, by = 500),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = mittel, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=mittel, sd=income_sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=median, sd=income_sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
#shapiro.test(allbus_messniveau_bsp$di01a)
qqnorm(allbus_messniveau_bsp$di01a) # Erstellen des Q-Q-Plots
qqline(allbus_messniveau_bsp$di01a) # Einfügen der Linie, auf der die Punkte liegen sollten
log.income = log(allbus_messniveau_bsp$di01a + 42) # 42 wird hier addiert, um negative Messwerte zu vermeiden.
qqnorm(log.income)
qqline(log.income)
log.median <- median(log.income)
log.mean <- mean(log.income)
log.sd <- sd(log.income)
pnorm(log(1500), log.mean, log.sd) # Anpassen der Anfrage an die Verteilungsfunktion
plnorm(1500, log.mean, log.sd)    # Verwenden der bereits implementierten lognormal-Funktion
qnorm(0.278, income_mean, income_sd)
tan.func <- function(x, lamb, mean){
f <- lamb * tanh(-x - mean)
return(f)
}
df.log.income <- data.frame(log.incomeh=atan.func(log.income, 1, log.mean))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
tan.func <- function(x, lamb, mean){
f <- lamb * tanh(-x - mean)
return(f)
}
df.log.income <- data.frame(log.incomeh=atan.func(log.income, 0.5, log.mean))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
tan.func <- function(x, lamb, mean){
f <- lamb * tanh(-x - mean)
return(f)
}
df.log.income <- data.frame(log.incomeh=atan.func(log.income, 5, log.mean))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
tan.func <- function(x, lamb, mean){
f <- lamb * tanh(-x - mean)
return(f)
}
df.log.income <- data.frame(log.incomeh=atan.func(log.income, 10, log.mean))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
tan.func <- function(x, lamb, mean){
f <- lamb * tanh(-x - mean)
return(f)
}
df.log.income <- data.frame(log.incomeh=atan.func(log.income, 6, log.mean))
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(tidyverse, ggplot2, haven, dplyr)
theme_set(theme_classic())
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
allbus_messniveau_bsp <- subset(daten, select=c("sex", "pt12", "di01a")) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ as.numeric(.))) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ ifelse(.%in% c(-7, -9, -11, -15, -42, -50 ), NA,.))) %>%
na.omit()
df_income <- data.frame(income=allbus_messniveau_bsp$di01a)
mittel <- mean(income)
median <- median(income)
modus <- as.numeric(names(sort(table(income), decreasing = TRUE)[1]))
ggplot(df_income, aes(x = income)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10000, by = 500),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = mittel, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = median, color = "blue", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = modus, color = "green", linetype = "dashed", linewidth = 1)
ggplot(df_income, aes(x = income)) +
geom_histogram(aes(y =cumsum(..density..)),
breaks = seq(-0, 10000, by = 1),
colour = "gray",
fill = "gray") +
labs(x = "Einkommen", y = "Kumulierte Häufigkeit") +
geom_vline(xintercept = mittel, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = median, color = "blue", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = modus, color = "green", linetype = "dashed", linewidth = 1)
income_mean <- mean(allbus_messniveau_bsp$di01a)
income_sd <- sd(allbus_messniveau_bsp$di01a)
# Die Verteilungsfunktion der Normalverteilung: "p" + "norm":
pnorm(1500, mean=income_mean, sd=income_sd)
quantile(allbus_messniveau_bsp$di01a, probs = c(0.278))
q <- quantile(allbus_messniveau_bsp$di01a, probs = c(1 - 0.278))
q
pnorm(2977.378, mean=income_mean, sd=income_sd)
qnorm(0.722, mean=income_mean, sd=income_sd)
ggplot(df_income, aes(x = income)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10000, by = 500),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = mittel, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=mittel, sd=income_sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=median, sd=income_sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
#shapiro.test(allbus_messniveau_bsp$di01a)
qqnorm(allbus_messniveau_bsp$di01a) # Erstellen des Q-Q-Plots
qqline(allbus_messniveau_bsp$di01a) # Einfügen der Linie, auf der die Punkte liegen sollten
log.income = log(allbus_messniveau_bsp$di01a + 42) # 42 wird hier addiert, um negative Messwerte zu vermeiden.
qqnorm(log.income)
qqline(log.income)
log.median <- median(log.income)
log.mean <- mean(log.income)
log.sd <- sd(log.income)
pnorm(log(1500), log.mean, log.sd) # Anpassen der Anfrage an die Verteilungsfunktion
plnorm(1500, log.mean, log.sd)    # Verwenden der bereits implementierten lognormal-Funktion
qnorm(0.278, income_mean, income_sd)
df.log.income <- data.frame(log.incomeh=log.income)
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
df.log.income <- data.frame(log.incomeh=log.income)
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd/2), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
df.log.income <- data.frame(log.incomeh=log.income)
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd/2), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
q1 <- quantile(log.income, probs = c(0.278))
q1
pnorm(q1,  mean=log.median, sd=log.sd/2)
q2 <- quantile(log.income, probs = c(1 - 0.278))
q2
pnorm(q2, mean=log.median, sd=log.sd/2)
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(tidyverse, ggplot2, haven, dplyr)
theme_set(theme_classic())
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
allbus_messniveau_bsp <- subset(daten, select=c("sex", "pt12", "di01a")) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ as.numeric(.))) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ ifelse(.%in% c(-7, -9, -11, -15, -42, -50 ), NA,.))) %>%
na.omit()
df_income <- data.frame(income=allbus_messniveau_bsp$di01a)
mittel <- mean(income)
median <- median(income)
modus <- as.numeric(names(sort(table(income), decreasing = TRUE)[1]))
ggplot(df_income, aes(x = income)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10000, by = 500),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = mittel, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = median, color = "blue", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = modus, color = "green", linetype = "dashed", linewidth = 1)
ggplot(df_income, aes(x = income)) +
geom_histogram(aes(y =cumsum(..density..)),
breaks = seq(-0, 10000, by = 1),
colour = "gray",
fill = "gray") +
labs(x = "Einkommen", y = "Kumulierte Häufigkeit") +
geom_vline(xintercept = mittel, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = median, color = "blue", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = modus, color = "green", linetype = "dashed", linewidth = 1)
income_mean <- mean(allbus_messniveau_bsp$di01a)
income_sd <- sd(allbus_messniveau_bsp$di01a)
# Die Verteilungsfunktion der Normalverteilung: "p" + "norm":
pnorm(1500, mean=income_mean, sd=income_sd)
quantile(allbus_messniveau_bsp$di01a, probs = c(0.278))
q <- quantile(allbus_messniveau_bsp$di01a, probs = c(1 - 0.278))
q
pnorm(2977.378, mean=income_mean, sd=income_sd)
qnorm(0.722, mean=income_mean, sd=income_sd)
ggplot(df_income, aes(x = income)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10000, by = 500),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = mittel, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=mittel, sd=income_sd), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=median, sd=income_sd), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
#shapiro.test(allbus_messniveau_bsp$di01a)
qqnorm(allbus_messniveau_bsp$di01a) # Erstellen des Q-Q-Plots
qqline(allbus_messniveau_bsp$di01a) # Einfügen der Linie, auf der die Punkte liegen sollten
log.income = log(allbus_messniveau_bsp$di01a + 42) # 42 wird hier addiert, um negative Messwerte zu vermeiden.
qqnorm(log.income)
qqline(log.income)
log.median <- median(log.income)
log.mean <- mean(log.income)
log.sd <- sd(log.income)
pnorm(log(1500), log.mean, log.sd) # Anpassen der Anfrage an die Verteilungsfunktion
plnorm(1500, log.mean, log.sd)    # Verwenden der bereits implementierten lognormal-Funktion
qnorm(0.278, income_mean, income_sd)
df.log.income <- data.frame(log.incomeh=log.income)
ggplot(df.log.income, aes(x = log.incomeh)) +
geom_histogram(aes(y =..density..),
breaks = seq(-0, 10, by = 0.1),
colour = "black",
fill = "gray") +
labs(x = "Einkommen", y = "Häufigkeit") +
geom_vline(xintercept = log.mean, color = "red", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = log.median, color = "blue", linetype = "dashed", linewidth = 1) +
stat_function(fun=dnorm, args=list(mean=log.mean, sd=log.sd/2), colour="red") +   # Einfügen der Normalcerteilung mit arithm. mittel
stat_function(fun=dnorm, args=list(mean=log.median, sd=log.sd/2), colour="blue") +  # Einfügen der NV mit Median
labs(x = "Einkommen", y = "Häufigkeit")
x <- 7
lambda <- 3
dpois(x, lambda)
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(tidyverse, ggplot2, haven, dplyr)
theme_set(theme_classic())
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
allbus_messniveau_bsp <- subset(daten, select=c("sex", "pt12", "di01a")) %>%                             # <1>
mutate(across(c("sex", "pt12", "di01a"), ~ as.numeric(.))) %>%                                         # <2>
mutate(across(c("sex", "pt12", "di01a"), ~ ifelse(.%in% c(-7, -9, -11, -15, -42, -50 ), NA,.))) %>%    # <3>
na.omit()                                                                                              # <4>
abs_freq_sex <- table(allbus_messniveau_bsp$sex)
length_sex <- length(allbus_messniveau_bsp$sex)
abs_freq_sex        # Ausgabe der Tabelle
abs_freq_sex <- table(allbus_messniveau_bsp$sex)
length_sex <- length(allbus_messniveau_bsp$sex)
abs_freq_sex        # Ausgabe der Tabelle
sum(abs_freq_sex)
sum(abs_freq_sex)   # Ausgabe der Summe der absoluten Häufigkeiten
length_sex          # Ausgabe der Gesamtanzahl an Merkmalsträgern im Datensatz
rel_freq_sex <- abs_freq_sex / length_sex # Berechnung der relativen Häufigkeiten
rel_freq_sex        # Ausgabe der Tabelle mit den relativen Häufigkeiten
sum(rel_freq_sex) # Ausgabe der Summe der relativen Häufigkeiten
df.sex <- data.frame(
sex=c("male", "female", "diverse"),
frequency=abs_freq_sex
)
ggplot(df.sex, aes(x="", y=frequency.Freq, fill=sex)) +
geom_bar(stat="identity") +
coord_polar("y")
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(tidyverse, ggplot2, haven, dplyr)
theme_set(theme_classic())
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
allbus_messniveau_bsp <- subset(daten, select=c("sex", "pt12", "di01a")) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ as.numeric(.))) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ ifelse(.%in% c(-7, -9, -11, -15, -42, -50 ), NA,.))) %>%
na.omit()
abs_freq_sex <- table(allbus_messniveau_bsp$sex)
length_sex <- length(allbus_messniveau_bsp$sex)
df.sex <- data.frame(
sex=c("male", "female", "diverse"),
frequency=abs_freq_sex
)
ggplot(df.sex, aes(x="", y=frequency.Freq, fill=sex)) +
geom_bar(stat="identity") +
coord_polar("y")
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(tidyverse, ggplot2, haven, dplyr)
theme_set(theme_classic())
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
allbus_messniveau_bsp <- subset(daten, select=c("sex")) %>%                             # <1>
mutate(across(c("sex"), ~ as.numeric(.))) %>%                                         # <2>
mutate(across(c("sex"), ~ ifelse(.%in% c(-7, -9, -11, -15, -42, -50 ), NA,.))) %>%    # <3>
na.omit()                                                                             # <4>
abs_freq_sex <- table(allbus_messniveau_bsp$sex)
length_sex <- length(allbus_messniveau_bsp$sex)
abs_freq_sex        # Ausgabe der Tabelle
sum(abs_freq_sex)   # Ausgabe der Summe der absoluten Häufigkeiten
length_sex          # Ausgabe der Gesamtanzahl an Merkmalsträgern im Datensatz
rel_freq_sex <- abs_freq_sex / length_sex # Berechnung der relativen Häufigkeiten
rel_freq_sex        # Ausgabe der Tabelle mit den relativen Häufigkeiten
df.sex <- data.frame(
sex=c("male", "female", "diverse"),
frequency=abs_freq_sex
)
ggplot(df.sex, aes(x="", y=frequency.Freq, fill=sex)) +
geom_bar(stat="identity") +
coord_polar("y")
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(tidyverse, ggplot2, haven, dplyr)
theme_set(theme_classic())
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
allbus_messniveau_bsp <- subset(daten, select=c("sex", "pt12", "di01a")) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ as.numeric(.))) %>%
mutate(across(c("sex", "pt12", "di01a"), ~ ifelse(.%in% c(-7, -9, -11, -15, -42, -50 ), NA,.))) %>%
na.omit()
df.sex$sex[which.max(df.sex$frequency.Freq)]
allbus_messniveau_bsp$sex$sex[which.max(allbus_messniveau_bsp$.sex$frequency.Freq)]
allbus_messniveau_bsp$sex[which.max(allbus_messniveau_bsp$sex$frequency.Freq)]
