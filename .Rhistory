conflicts_prefer(dplyr::filter)
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten_neu <- daten %>%
rename(TV_Konsum = lm02)%>%
rename(TV_Vertrauen= pt09)%>%
filter(between(TV_Konsum, 0, 1500))%>%
filter(between(TV_Vertrauen, 1, 7))
korrelation <- daten_neu %>%
summarize(correlation = cor(TV_Konsum, TV_Vertrauen, use = "complete.obs"))
print(korrelation)
scatterplot <- ggplot(daten_neu, aes(x = TV_Konsum, y = TV_Vertrauen)) +
geom_point(color = "blue") +
labs(x = "TV Konsum", y = "TV Vertrauen", title = "Korrelation zwischen TV Konsum und Vertrauen")
print(scatterplot)
daten_neu2 <- daten %>%
rename(TV_Konsum = lm02)%>%
rename(Kriminalitätsprognose= cf03)%>%
filter(between(TV_Konsum, 0, 1500))%>%
filter(between(Kriminalitätsprognose, 1, 5))
korrelation <- daten_neu2 %>%
summarize(correlation = cor(TV_Konsum, Kriminalitätsprognose, use = "complete.obs"))
print(korrelation)
scatterplot <- ggplot(daten_neu2, aes(x = TV_Konsum, y = Kriminalitätsprognose)) +
geom_point(color = "red") +
labs(x = "TV Konsum", y = "Kriminalitätsprognose", title = "Korrelation zwischen TV Konsum und Kriminalitätsprognose")
print(scatterplot)
install.packages("tidyverse")
install.packages("broom")
install.packages("lm.beta")
install.packages("performance")
install.packages("tidyverse")
install.packages("broom")
install.packages("lm.beta")
install.packages("performance")
install.packages("see")
install.packages("haven")
library(tidyverse)
library(broom)
library(lm.beta)
library(performance)
library(see)
library(haven)
install.packages("haven")
daten2 <- daten %>%
rename(Nachrichtenrezeption = lm20)%>%
rename(Vertrauen_Bundestag = pt12)%>%
filter(between(Nachrichtenrezeption, 0, 7))%>%
filter(between(Vertrauen_Bundestag, 1, 7))
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten2 <- daten %>%
rename(Nachrichtenrezeption = lm20)%>%
rename(Vertrauen_Bundestag = pt12)%>%
filter(between(Nachrichtenrezeption, 0, 7))%>%
filter(between(Vertrauen_Bundestag, 1, 7))
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
rename(Nachrichtenrezeption = lm20)%>%
rename(Vertrauen_Bundestag = pt12)%>%
filter(between(Nachrichtenrezeption, 0, 7))%>%
filter(between(Vertrauen_Bundestag, 1, 7))
install.packages("tidyverse")
install.packages("broom")
install.packages("lm.beta")
install.packages("performance")
install.packages("see")
install.packages("haven")
intsall.packages("dplyr")
install.packages("haven")
install.packages("tidyverse")
install.packages("broom")
install.packages("lm.beta")
install.packages("performance")
install.packages("see")
install.packages("haven")
install.packages("dplyr")
library(tidyverse)
library(broom)
library(lm.beta)
library(performance)
library(see)
library(haven)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
rename(Nachrichtenrezeption = lm20)%>%
rename(Vertrauen_Bundestag = pt12)%>%
filter(between(Nachrichtenrezeption, 0, 7))%>%
filter(between(Vertrauen_Bundestag, 1, 7))
install.packages("tidyverse")
install.packages("broom")
install.packages("lm.beta")
install.packages("performance")
install.packages("see")
install.packages("haven")
install.packages("dplyr")
library(tidyverse)
library(broom)
library(lm.beta)
library(performance)
library(see)
library(haven)
library(dplyr)
install.packages("haven")
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten <- daten %>%
rename(Nachrichtenrezeption = lm20)%>%
rename(Vertrauen_Bundestag = pt12)%>%
filter(between(Nachrichtenrezeption, 0, 7))%>%
filter(between(Vertrauen_Bundestag, 1, 7))
install.packages("tidyverse")
install.packages("broom")
install.packages("lm.beta")
install.packages("performance")
install.packages("see")
install.packages("haven")
install.packages("dplyr")
library(tidyverse)
library(broom)
library(lm.beta)
library(performance)
library(see)
library(haven)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
>>>>>>> b636885f72c045ef8046a5dc628ec2f79fabed72
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(tidyverse, ggplot2, haven) # <1>
theme_set(theme_classic()) # <2>
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
daten$sex
daten %>%
filter(.,sex == 1:2)
daten %>%
filter(sex == 1:2)
?dplyr::filter
daten %>%
filter(., sex <3)
dat <- daten %>%
filter(., sex <3)
dat$sex
table(dat$sex)
dat <- daten %>%
filter(., sex == 1 | sex == 2)
table(dat$sex)
dat <- daten %>%
filter(., sex == 1 | sex == 2) %>%  #>1
rename(trustpol == pt15)
dat <- daten %>%
filter(., sex == 1 | sex == 2) %>%  #>1
rename(pt15 == trustpol)
dat <- daten %>%
filter(., sex == 1 | sex == 2) %>%  #>1
rename(., trustpol == pt15)
dat <- daten %>%
filter(., sex == 1 | sex == 2) %>%  #>1
rename(., "trustpol" == pt15)
dat <- daten %>%
filter(., sex == 1 | sex == 2) %>%  #>1
rename(., trustpol = pt15)
# t-Test durchführen
dat %>%
drop_na(sex, trustpol) %>%
t.test(trustpol~sex,
alternative = "two.sided",
var.equal = T,
data = .)
if(!require("pacman")) {install.packages("pacman");library(pacman)}
p_load(tidyverse, ggplot2, haven, mosaic, knitr,effectsize, car, broom) # <1>
theme_set(theme_classic()) # <2>
daten = haven::read_dta("Datensatz/Allbus_2021.dta")
dat <- daten %>%
filter(., sex == 1 | sex == 2) %>%  # <1>
rename(., trustpol = pt15) # <2>
# t-Test durchführen
dat %>%
drop_na(sex, trustpol) %>%
t.test(trustpol~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# Effektstärke cohens d berechnen
dat %>%
drop_na(sex, trustpol) %>%
cohens_d(trustpol~sex, data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt09) %>%
t.test(trustpol~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# Effektstärke cohens d berechnen
dat %>%
drop_na(sex, trustpol) %>%
cohens_d(trustpol~sex, data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt09) %>%
t.test(pt09~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# Effektstärke cohens d berechnen
dat %>%
drop_na(sex, trustpol) %>%
cohens_d(trustpol~sex, data = .)
# t-Test durchführen
dat %>%
drop_na(sex, cf03) %>%
t.test(cf03~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# Effektstärke cohens d berechnen
dat %>%
drop_na(sex, trustpol) %>%
cohens_d(trustpol~sex, data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt08) %>%
t.test(pt08~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt03) %>%
t.test(pt03~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# Effektstärke cohens d berechnen
dat %>%
drop_na(sex, trustpol) %>%
cohens_d(trustpol~sex, data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt03) %>%
filter(.,pt03 <8 | pt03 >0)
# t-Test durchführen
dat %>%
drop_na(sex, pt03) %>%
filter(.,pt03 <8 | pt03 >0) %>%
t.test(pt03~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt03) %>%
filter(.,pt03 <8 | pt03 >1) %>%
t.test(pt03~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt03) %>%
filter(.,pt03 <8 & pt03 >1) %>%
t.test(pt03~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt014) %>%
filter(.,pt14 <8 & pt03 >0) %>%
t.test(pt03~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt14) %>%
filter(.,pt14 <8 & pt03 >0) %>%
t.test(pt03~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt14) %>%
filter(.,pt14 <8 | pt03 >0) %>%
t.test(pt03~sex,
alternative = "two.sided",
var.equal = T,
data = .)
dat$pt14
table(dat$pt14)
dat %>%
drop_na(sex, pt14) %>%
filter(.,pt14 <8 | pt03 >0)
table(dat$pt14)
dat %>%
drop_na(sex, pt14) %>%
filter(.,pt14 <8 & pt03 >0)
table(dat$pt14)
dat %>%
drop_na(sex, pt14) %>%
filter(.,pt14 <8 & pt14 >0)
table(dat$pt14)
dat %>%
drop_na(sex, pt14) %>%
filter(.,pt14 >= 1)
table(dat$pt14)
dat %>%
filter(.,pt14 >= 1)
table(dat$pt14)
dat <- dat %>%
filter(.,pt14 >= 1)
data <- dat %>%
filter(.,pt14 > 0)
table(dat$pt14)
# t-Test durchführen
dat %>%
drop_na(sex, pt14) %>%
filter(.,pt14 >0) %>%
t.test(pt14~sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt15) %>%
filter(.,pt15 >0) %>%
t.test(pt15~sex,
alternative = "two.sided",
var.equal = T,
data = .)
dat <- daten %>%
filter(., sex == 1 | sex == 2) %>%  # <1>
rename(., trustpol = pt15) # <2>
# t-Test durchführen
dat %>%
drop_na(sex, pt15) %>%
filter(.,pt15 >0) %>%
t.test(pt15 ~ sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, trustpol) %>%
filter(.,trustpol >0) %>%
t.test(trustpol ~ sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, pt09) %>%
filter(.,pt09 >0) %>%
t.test(pt09 ~ sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(sex, cf03) %>%
filter(.,cf03 >0) %>%
t.test(cf03 ~ sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(eastwest, cf03) %>%
filter(.,cf03 >0) %>%
t.test(cf03 ~ sex,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(eastwest, cf03) %>%
filter(.,cf03 >0) %>%
t.test(cf03 ~ eastwest,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(eastwest, pt03) %>%
filter(.,pt03 >0) %>%
t.test(pt03 ~ eastwest,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(eastwest, pt10) %>%
filter(.,pt10 >0) %>%
t.test(pt10 ~ eastwest,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(eastwest, pt12) %>%
filter(.,pt12 >0) %>%
t.test(pt12 ~ eastwest,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(eastwest, pt15) %>%
filter(.,pt15 >0) %>%
t.test(pt15 ~ eastwest,
alternative = "two.sided",
var.equal = T,
data = .)
dat <- daten %>%
filter(., sex == 1 | sex == 2) %>%  # <1>
#  rename(., trustpol = pt15) # <2>
dat <- daten %>%
filter(., sex == 1 | sex == 2)  # <1>
#  rename(., trustpol = pt15) # <2>
dat <- daten %>%
filter(., sex == 1 | sex == 2)  # <1>
#  rename(., trustpol = pt15) # <2>
# t-Test durchführen
dat %>%
drop_na(eastwest, pt15) %>%
filter(.,pt15 >0) %>%
t.test(pt15 ~ eastwest,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(eastwest, pt14) %>%
filter(.,pt14 >0) %>%
t.test(pt14 ~ eastwest,
alternative = "two.sided",
var.equal = T,
data = .)
# t-Test durchführen
dat %>%
drop_na(eastwest, pt12) %>%
filter(.,pt12 >0) %>%
t.test(pt12 ~ eastwest,
alternative = "two.sided",
var.equal = T,
data = .)
dat <- daten %>%
filter(., pt12 > 0)
rename(., trustreg = pt12)
dat <- daten %>%
filter(., pt12 > 0) %>%
rename(., trustreg = pt12)
dat <- daten %>%
filter(., pt12 > 0) %>%
rename(., trustreg == pt12)
dat <- daten %>%
filter(., pt12 > 0) %>%
rename(., trustreg = pt12)
daten %>%
filter(., pt12 > 0) %>%
rename(., trustreg = pt12)
dat <- daten %>%
filter(., pt12 > 0) %>%
rename(., trustreg = pt12)
data <- daten %>%
filter(., pt12 > 0) %>%
rename(., trustreg = pt12)
des_stat <- (favstats(trustreg ~ eastwest, data = data))
kable (des_stat,
col.names = c(label_UV,"Minimum", "1.Quartil",
"Median", "3.Quartil",
"Maximum", "M", "SD", "N",
"Fehlend"),
digits = 2)
kable(des_stat,
col.names = c("Vertrauen in die Bundesregierung","Minimum", "1.Quartil",
"Median", "3.Quartil",
"Maximum", "M", "SD", "N",
"Fehlend"),
digits = 2)
des_stat
des_stat
kable(des_stat,
col.names = c("Vertrauen in die Bundesregierung","Minimum", "1.Quartil",
"Median", "3.Quartil",
"Maximum", "M", "SD", "N",
"Fehlend"),
digits = 2)
des_stat
# t-Test durchführen
data %>%
drop_na(eastwest, trustreg) %>%
filter(.,trustreg >0) %>%
t.test(trustreg ~ eastwest,
alternative = "two.sided",
var.equal = T,
data = .)
# Effektstärke cohens d berechnen
data %>%
drop_na(eastwest, trustreg) %>%
cohens_d(trustreg~eastwest, data = .)
