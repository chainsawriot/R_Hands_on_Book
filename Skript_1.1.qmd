---
title: "EinfÃ¼hrung in R und RStudio"
author: "Katharina Maubach & Patrick Zerrer"
toc: true
number-sections: true
highlight-style: pygments
format:
  html:
    code-fold: false
    code-line-numbers: true
---

![Artwork by @allison_horst](Bilder/Grafik%20R%20Lernen.png)

## Was ist R?

R ist eine freie Programmiersprache die auf allen gÃ¤ngigen Betriebssystemen lÃ¤uft. In seiner Grundfunktion ist R zunÃ¤chst eine Konsole, in welcher wir zeilenweise Code eingeben und ausfÃ¼hren kÃ¶nnen. Dabei kann es sich um einfache Rechnungen oder auch komplexe Modelle handeln. Die meisten arbeiten dabei nicht mit R als solches sondern nutzen verschiedene Umgebungen, etwa RStudio oder Jupyter Hub um mit R zu arbeiten.

## Was ist RStudio?

RStudio ist eine Erweiterung von R und bietete den Nutzer*innen eine benutzerfreundlichere ProgrammoberflÃ¤che. So ermÃ¶glicht RStudio einen direkten Ãœberblick Ã¼ber die geladenen Pakete, DatensÃ¤tze und im Arbeitsverzeichnis gespeicherten Dateien. Zudem ermÃ¶glicht RStudio die Arbeit mit Skripten, Markdown und Quarto Dokumenten. 


## Installation von R und RStudio

MÃ¶chtet ihr das Programm lokal auf eurem Rechner nutzen, mÃ¼sst ihr zunÃ¤chst die Programme R, RStudio und gegebenfalls RTools installieren. Alle Programme sind kostenlos online verfÃ¼gbar und lassen sich auf allen gÃ¤ngigen Betriebssystemen installieren. Installiert zunÃ¤chst [R](https://cran.uni-muenster.de/) und anschlieÃŸend [RStudio](https://posit.co/download/rstudio-desktop/) und achtet darauf regelmÃ¤ÃŸig auf die aktuelle Version zu aktualisieren.

Innerhalb unseres Kurse arbeiten wir mit R und RStudio, nutzen die Programme allerdings in der Umgebung von Jupyter.

## Die ProgrammoberflÃ¤che von RStudio

Innerhalb von RStudio unterscheiden wir 4 SchaltflÃ¤chen:


1) Ist der Bereich in welchen wir Skripte, Markdown und Quarto-Dokumente bearbeiten und ausfÃ¼hren kÃ¶nnen (siehe auch Markdown und Quarto)

2) Ist die Konsole. Dies ist der Bereich in welchem wir weiterhin oldschool R angezeigt bekommen. Dieser Bereich kann sehr hilfreich sein, wenn man kurz Befehle benÃ¶tigt, welche nicht im Skript auftauchen sollen (beispielsweise eine kurze Hilfe zu Funktionen mittels `?`) 

3) In diesem Bereich findet sich alles zu den innerhalb von R geladenen DatensÃ¤tzen. Unter Environment finden sich die DatensÃ¤tze (**Data**), die Historie der genutzten Befehle (**History**), eine Schnittstelle zu Datenbanken (**Connection**) sowie R-interne Tutorials (**Tutorial**). 

4) In diesem Bereich finden sich verschiedene Reiter, welche die Organisation der Arbeit mit R erleichtern. Unter **File** befinden sich alle innerhalb des Ordners oder Projektes befindlichen Dateien. Unter **Plots** kann man sich die in R erstellten Grafiken anzeigen lassen. **Packages** zeigt alle in R installierten Pakete an. Hier lassen sich mittels `install` auch neue Pakete installieren oder Ã¼ber `update`die aktuellen Pakete updaten. Bei **Help** kÃ¶nnen wir eine Hilfeseite aufrufen. Es kann wahlweise direkt innerhalb der Seite nach Hilfen gesucht werden oder mit dem Befehl `?Name der Funktion` bzw. `??Name des Packages` innerhalb der Konsole. MÃ¶chte man nach einem Befehl aus einem Paket suchen nutzt man den Suchbefehle` ?Name des Packages::Name der Funktion`. Unter *Viewer** finden sich gerenderte Dokumente (beispielsweise ein gerendertes Markdown oder Quarto Dokument) und unter **Presentation** gerenderte Shiny-Dokumente.  



MenÃ¼leiste

::: callout-note

## WeiterfÃ¼hrende Literatur

> ğŸ“– Gehrau, V., Maubach, K., & Fujarski, S. (2022). Einfache Datenauswertung mit R. [Link](https://link.springer.com/book/10.1007/978-3-658-34285-2)

:::
